<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>INUKA Distributor - Luxury Cosmetics & Fragrances</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles for the premium dark theme */
        :root {
            --color-primary: #1a1a1a; /* Deep Black */
            --color-secondary: #d4af37; /* Gold Accent */
            --color-text: #e5e5e5; /* Off-White Text */
            --color-chat-bg: #2d2d2d;
            --color-chat-user: #d4af37;
            --color-chat-bot: #4a4a4a;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--color-primary);
            color: var(--color-text);
        }

        .header-strip {
            background-color: #000;
        }

        .hero-section {
            background-image: url('https://placehold.co/1200x600/1a1a1a/e5e5e5?text=Luxury+Fragrance+Experience');
            background-size: cover;
            background-position: center;
            min-height: 70vh;
        }

        .cta-button {
            background-color: var(--color-secondary);
            color: var(--color-primary);
            transition: all 0.3s ease;
        }

        .cta-button:hover {
            background-color: #f0e68c; /* Lighter gold */
        }

        /* Chatbot Container Fixed Positioning */
        #chatbot-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 90%;
            max-width: 380px;
            z-index: 100;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            border-radius: 12px;
            overflow: hidden;
        }

        #chat-window {
            height: 400px;
            background-color: var(--color-chat-bg);
            border-radius: 8px;
            overflow-y: auto;
            padding: 1rem;
        }

        .bot-message {
            background-color: var(--color-chat-bot);
            border-radius: 10px 10px 10px 0;
            padding: 0.5rem 1rem;
            max-width: 80%;
            margin-bottom: 0.75rem;
            color: var(--color-text);
            word-wrap: break-word;
        }

        .user-message {
            background-color: var(--color-chat-user);
            color: var(--color-primary);
            border-radius: 10px 10px 0 10px;
            padding: 0.5rem 1rem;
            max-width: 80%;
            margin-left: auto;
            margin-bottom: 0.75rem;
            word-wrap: break-word;
        }

        /* Scrollbar styling for a cleaner look */
        #chat-window::-webkit-scrollbar {
            width: 6px;
        }
        #chat-window::-webkit-scrollbar-thumb {
            background: var(--color-secondary);
            border-radius: 3px;
        }
        #chat-window::-webkit-scrollbar-track {
            background: var(--color-chat-bg);
        }

        .loader {
            border: 4px solid rgba(255, 255, 255, 0.2);
            border-top: 4px solid var(--color-secondary);
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            display: inline-block;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="min-h-screen">

    <!-- Header Strip -->
    <header class="header-strip py-2 text-xs">
        <div class="container mx-auto px-4 flex justify-between items-center text-gray-400">
            <span>ðŸ“ž +27 12 345 6789 | ðŸ“§ myinuka@email.com</span>
            <span class="font-bold text-sm text-gray-200">INUKA Independent Distributor: [Your Name]</span>
        </div>
    </header>

    <!-- Main Navigation -->
    <nav class="bg-white text-gray-800 shadow-md">
        <div class="container mx-auto px-4 py-3 flex justify-between items-center">
            <h1 class="text-xl font-extrabold tracking-widest text-black">INUKA LUXE</h1>
            <div class="hidden md:flex space-x-6 font-medium">
                <a href="#home" class="hover:text-amber-600 transition duration-200">Home</a>
                <a href="#products" class="hover:text-amber-600 transition duration-200">Products</a>
                <a href="#join" class="hover:text-amber-600 transition duration-200">Join My Team</a>
                <a href="#about" class="hover:text-amber-600 transition duration-200">My Story</a>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section id="home" class="hero-section flex items-center justify-center p-8 text-center">
        <div class="max-w-4xl p-10 bg-black bg-opacity-60 rounded-xl shadow-2xl">
            <h2 class="text-4xl md:text-6xl font-extrabold text-white leading-tight">
                OUR STORY IS ONE OF DREAMS REALIZED
            </h2>
            <p class="mt-4 text-lg md:text-xl text-gray-200">
                Discover the finest in luxury fragrances and cosmetics, and the opportunity to shape your own future.
            </p>
            <div class="mt-8 space-x-4">
                <button onclick="startChat('order')" class="cta-button py-3 px-8 rounded-full font-bold text-lg hover:shadow-xl">
                    Shop Now
                </button>
                <button onclick="startChat('join')" class="py-3 px-8 rounded-full font-bold text-lg bg-transparent border-2 border-white text-white hover:bg-white hover:text-black transition duration-300">
                    Join My Team
                </button>
            </div>
        </div>
    </section>

    <!-- Content Sections (Example Product/Opportunity Overviews) -->
    <main class="container mx-auto px-4 py-16">
        <section id="products" class="text-center mb-16">
            <h3 class="text-3xl font-bold text-gray-100 mb-4 border-b-2 border-yellow-700 inline-block pb-1">Luxury Fragrances</h3>
            <p class="max-w-2xl mx-auto text-gray-300">Our perfumes contain 22% natural A-grade fragranced oils, ensuring a superior and long-lasting experience. Explore our Classic, Exclusive, and Signature ranges.</p>
        </section>

        <section id="join" class="text-center mb-16">
            <h3 class="text-3xl font-bold text-gray-100 mb-4 border-b-2 border-yellow-700 inline-block pb-1">The Business Opportunity</h3>
            <p class="max-w-2xl mx-auto text-gray-300">Start your INUKA journey today! Become an independent distributor and benefit from immediate retail profit, cash rewards, and a proven 90-Day Earnings Plan.</p>
        </section>
    </main>
    
    <!-- Footer -->
    <footer class="bg-black py-8">
        <div class="container mx-auto px-4 text-center text-gray-500">
            <p>&copy; 2025 INUKA LUXE. All Rights Reserved. | Independent Distributor Website.</p>
            <p class="text-sm mt-2">Disclaimer: This website is owned and operated by an independent INUKA distributor and is not the official INUKA corporate website.</p>
        </div>
    </footer>

    <!-- Chatbot Container -->
    <div id="chatbot-container" class="hidden">
        <div class="bg-gray-800 p-3 flex justify-between items-center rounded-t-xl">
            <h4 class="text-white font-semibold">INUKA Mentor Chat</h4>
            <button onclick="toggleChat()" class="text-gray-300 hover:text-white transition duration-200 text-xl font-bold">&times;</button>
        </div>
        
        <div id="chat-window" class="flex flex-col space-y-2">
            <!-- Messages go here -->
        </div>

        <div class="p-3 bg-gray-900 rounded-b-xl">
            <div id="loading-indicator" class="hidden text-center py-2">
                <div class="loader"></div>
            </div>
            <div id="input-area" class="flex">
                <input type="text" id="user-input" placeholder="Type your message..."
                       class="flex-grow p-2 mr-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-600">
                <button id="send-btn" onclick="handleUserInput()"
                        class="cta-button py-2 px-4 rounded-lg font-bold text-sm">
                    Send
                </button>
            </div>
        </div>
    </div>

    <!-- Chatbot Toggle Button -->
    <button id="chat-toggle-btn" onclick="toggleChat()"
            class="fixed bottom-6 right-6 p-4 rounded-full bg-yellow-600 text-black shadow-lg font-bold z-10 hover:bg-yellow-500 transition duration-300">
        Chat with Us
    </button>


    <script>
        // --- CHATBOT LOGIC ---

        const chatWindow = document.getElementById('chat-window');
        const userInput = document.getElementById('user-input');
        const chatbotContainer = document.getElementById('chatbot-container');
        const loadingIndicator = document.getElementById('loading-indicator');
        const sendBtn = document.getElementById('send-btn');
        const inputArea = document.getElementById('input-area');

        // State variables
        let chatStep = 'START';
        let isChatOpen = false;
        let recruitmentAnswers = {};
        let currentQuestionKey = '';
        
        // Configuration
        const PRODUCT_LINK = 'https://www.inuka4u.co.za/products/';
        const MEMBER_LINK = 'https://www.inuka4u.co.za/become-a-member/';
        const MOCK_EMAIL = 'myinuka@email.com'; // Use a mock email for proof of payment

        const recruitmentQuestions = {
            Q1: {
                key: 'motivation',
                prompt: "Great! Becoming an INUKA partner is an inspiring journey. To start, *why do you want to join our team?* What inspired you to choose INUKA?",
                next: 'Q2'
            },
            Q2: {
                key: 'contribution',
                prompt: "That's wonderful motivation. Next, *what unique skills, experiences, or commitment are you bringing to the table* to grow your INUKA business?",
                next: 'Q3'
            },
            Q3: {
                key: 'goal',
                prompt: "Thank you for sharing that. Finally, *what is your biggest financial or personal goal* you hope to achieve within your first 6 months as an INUKA partner?",
                next: 'END'
            }
        };

        // --- Core Functions ---

        function toggleChat() {
            isChatOpen = !isChatOpen;
            chatbotContainer.classList.toggle('hidden', !isChatOpen);
            document.getElementById('chat-toggle-btn').classList.toggle('hidden', isChatOpen);
            if (isChatOpen) {
                // If opening, ensure the welcome message is displayed
                if (chatWindow.children.length === 0) {
                    addBotMessage("Welcome to INUKA LUXE! I'm your digital mentor. How can I help you today? You can ask to **'Place an Order'** or **'Join My Team'**.");
                }
                userInput.focus();
            }
        }

        function addMessage(text, sender) {
            const msgDiv = document.createElement('div');
            msgDiv.classList.add(sender === 'user' ? 'user-message' : 'bot-message');
            msgDiv.innerHTML = text; // Use innerHTML to allow links/formatting
            chatWindow.appendChild(msgDiv);
            chatWindow.scrollTop = chatWindow.scrollHeight;
        }

        function startChat(flow) {
            if (!isChatOpen) {
                toggleChat();
            }
            if (flow === 'order') {
                handleUserInput("I want to place an order", true);
            } else if (flow === 'join') {
                handleUserInput("I want to join my team", true);
            }
        }


        async function handleUserInput(text = userInput.value, isPredefined = false) {
            if (!isPredefined && (text.trim() === '' || isTyping)) return;

            const input = text.trim();
            if (!isPredefined) {
                addMessage(input, 'user');
                userInput.value = '';
            }
            
            await processChat(input);
        }

        async function processChat(input) {
            // Disable input while processing
            sendBtn.disabled = true;
            userInput.disabled = true;
            loadingIndicator.classList.remove('hidden');
            
            const lowerInput = input.toLowerCase();

            // --- State Transition Logic ---
            
            if (chatStep === 'START') {
                if (lowerInput.includes('place an order') || lowerInput.includes('shop') || lowerInput.includes('product')) {
                    chatStep = 'ORDER_FLOW';
                    respondOrderFlow();
                } else if (lowerInput.includes('join') || lowerInput.includes('sell') || lowerInput.includes('member')) {
                    chatStep = 'JOIN_FLOW_Q1';
                    respondRecruitmentQuestion('Q1');
                } else {
                    addBotMessage("I can guide you to **'Place an Order'** or start the process to **'Join My Team'**. Please let me know your choice!");
                }
            } else if (chatStep.startsWith('JOIN_FLOW_Q')) {
                // Handle answer for the current question
                recruitmentAnswers[currentQuestionKey] = input;
                
                const currentStepName = chatStep.split('_')[2]; // e.g., 'Q1'
                const nextStepName = recruitmentQuestions[currentStepName].next;
                
                if (nextStepName !== 'END') {
                    chatStep = 'JOIN_FLOW_' + nextStepName;
                    respondRecruitmentQuestion(nextStepName);
                } else {
                    chatStep = 'JOIN_FLOW_END';
                    await respondRecruitmentEnd();
                }
            } else if (chatStep === 'ORDER_FLOW') {
                // If user types anything else in order flow, just repeat the instructions
                respondOrderFlow(); 
            } else if (chatStep === 'JOIN_FLOW_END') {
                // If user types anything else after completion, repeat the link
                respondRecruitmentEnd(true); 
            }

            // Re-enable input
            loadingIndicator.classList.add('hidden');
            sendBtn.disabled = false;
            userInput.disabled = false;
            userInput.focus();
        }

        // --- Response Functions ---

        function respondOrderFlow() {
            const message = `Excellent choice! You can view and choose from our entire product catalog here: <a href="${PRODUCT_LINK}" target="_blank" class="text-yellow-400 font-bold hover:underline">View INUKA Products Now</a>.<br><br>
            When you are ready to order, please follow the instructions on that page to submit your order details.<br><br>
            **Important:** You can make payment and provide proof of payment via email to: <span class="font-bold">${MOCK_EMAIL}</span>.`;
            addBotMessage(message);
        }

        function respondRecruitmentQuestion(questionKey) {
            const question = recruitmentQuestions[questionKey];
            currentQuestionKey = question.key;
            addBotMessage(question.prompt);
        }

        async function respondRecruitmentEnd(isRepeat = false) {
            if (isRepeat) {
                 addBotMessage(`Ready for the next step? Please proceed to the official form: <a href="${MEMBER_LINK}" target="_blank" class="text-yellow-400 font-bold hover:underline">Complete Your Registration Here</a>. We can't wait to have you!`);
                 return;
            }

            const answersString = Object.entries(recruitmentAnswers)
                .map(([key, value]) => `**${key.toUpperCase()}**: ${value}`)
                .join('\n');

            const systemPrompt = "You are a warm, supportive INUKA Mentor. Analyze the user's motivations and goals (provided below). Write a single, concise paragraph (max 4 sentences) that provides encouraging feedback, confirms their commitment, and enthusiastically pushes them to the next, final step. Do not include any external links in your analysis; just focus on their responses.";
            const userQuery = `The applicant's answers are:\n${answersString}`;
            
            // Show loading for the LLM call
            loadingIndicator.classList.remove('hidden');
            inputArea.classList.add('hidden');
            
            let llmAnalysis = "";
            try {
                llmAnalysis = await getLlmResponse(systemPrompt, userQuery);
            } catch (error) {
                console.error("LLM API Call Failed:", error);
                llmAnalysis = "Thank you for sharing your commitment and goals! We've reviewed your answers and are incredibly excited to support your journey. Your drive is exactly what we look for in our partners.";
            }

            // Hide loading
            loadingIndicator.classList.add('hidden');
            inputArea.classList.remove('hidden');

            const finalMessage = `
                <span class="font-bold text-yellow-500">Mentor Feedback:</span>
                <p class="mt-2">${llmAnalysis}</p>
                <p class="mt-3">Your commitment looks strong! The next step is to formalize your partnership. Please visit our official membership page to complete the form and pay for your joining kit:</p>
                <a href="${MEMBER_LINK}" target="_blank" class="text-yellow-400 font-bold hover:underline">Complete Your Registration Here</a>
            `;
            addBotMessage(finalMessage);
        }

        // --- LLM API Handling ---

        async function getLlmResponse(systemPrompt, userQuery) {
            const apiKey = ""; 
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent?key=${apiKey}`;

            const payload = {
                contents: [{ parts: [{ text: userQuery }] }],
                systemInstruction: { parts: [{ text: systemPrompt }] },
            };

            const maxRetries = 5;
            for (let i = 0; i < maxRetries; i++) {
                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });

                    if (!response.ok) {
                        const errorBody = await response.json();
                        throw new Error(`API error: ${response.status} - ${errorBody.error?.message || response.statusText}`);
                    }

                    const result = await response.json();
                    const text = result.candidates?.[0]?.content?.parts?.[0]?.text;
                    if (text) return text;
                    throw new Error("No text content received from API.");
                } catch (error) {
                    if (i < maxRetries - 1) {
                        await new Promise(resolve => setTimeout(resolve, Math.pow(2, i) * 1000));
                    } else {
                        throw error;
                    }
                }
            }
        }


        // --- Event Listeners and Initialization ---

        userInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                handleUserInput();
            }
        });
        
        // Initial setup for chat window visibility
        document.addEventListener('DOMContentLoaded', () => {
            // Ensure the chat window starts hidden
            chatbotContainer.classList.add('hidden');
        });

    </script>
</body>
</html>
